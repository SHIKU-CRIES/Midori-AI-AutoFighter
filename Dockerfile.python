FROM lunamidori5/pixelarch:quartz

EXPOSE 59002

ENV PYTHONOPTIMIZE=1
ENV PYTHONUNBUFFERED=1

ENV UV_LINK_MODE=copy
ENV UV_COMPILE_BYTECODE=1

# Update OS release info for clarity
RUN sudo sed -i 's/Quartz/Backend-uv-server/g' /etc/os-release

# Install uv
# NOTE: yay handles privilege escalation internally; do not prefix with sudo
RUN yay -Syu --noconfirm uv && yay -Yccc --noconfirm

# Install Docker
# NOTE: yay handles privilege escalation internally; do not prefix with sudo
RUN yay -Syu --noconfirm docker && yay -Yccc --noconfirm

# Install Docker Compose
# NOTE: yay handles privilege escalation internally; do not prefix with sudo
RUN yay -Syu --noconfirm docker-compose && yay -Yccc --noconfirm
RUN yay -Syu --noconfirm uv && yay -Yccc --noconfirm

# Ensure uv is on PATH and app root
ENV PATH="/root/.local/bin:${PATH}"
ENV PYTHONPATH="/app"

# UV cache directory for uv to store downloaded models/caches
ENV UV_CACHE_DIR="/.cache"

WORKDIR /app

# NOTE: do not hardcode user; pull from shell and keep sudo
RUN sudo chown -R $(whoami):$(whoami) /app

RUN sudo mkdir -p ${UV_CACHE_DIR}
RUN sudo chown -R $(whoami):$(whoami) ${UV_CACHE_DIR} 
RUN sudo chmod -R 755 ${UV_CACHE_DIR}

RUN sudo mkdir -p /.venv
RUN sudo chown -R $(whoami):$(whoami) /.venv
RUN sudo chmod -R 755 /.venv

# Do not copy source; it will be bind-mounted at runtime

# Entrypoint will install deps and run the server from the mounted /app
CMD ["bash", "-lc", "bash /app/docker-entrypoint.sh"]
