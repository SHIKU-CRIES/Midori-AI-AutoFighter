FROM lunamidori5/pixelarch:topaz

# Rename OS for clarity in image metadata
RUN sudo sed -i 's/Topaz/Desktop-Builder/g' /etc/os-release

# Install development tools, node, Wine, and rust
RUN yay -Syu --noconfirm base-devel git nodejs npm curl wget unzip wine xvfb rust

# Install uv and bun via package manager
RUN yay -S --noconfirm uv bun-bin

# Clean package cache
RUN yay -Yccc --noconfirm

# Install Tauri CLI
RUN cargo install tauri-cli

WORKDIR /workspace
COPY backend ./backend
COPY frontend ./frontend

# Prepare Wine prefix with Windows Python
ENV WINEPREFIX=/tmp/wine-python
ENV WINEARCH=win64
WORKDIR /tmp/wine-python
RUN winecfg /v win10
RUN wget "https://www.python.org/ftp/python/3.12.7/python-3.12.7-amd64.exe"
RUN xvfb-run wine python-3.12.7-amd64.exe /quiet InstallAllUsers=1 PrependPath=1 Include_test=0

# Export backend requirements and copy into Wine prefix
WORKDIR /workspace/backend
RUN uv export --no-dev --format requirements-txt > requirements.txt
RUN cp -r /workspace/backend /tmp/wine-python/

# Build the backend into a Windows executable using Wine
WORKDIR /tmp/wine-python/backend
RUN xvfb-run wine python -m ensurepip
RUN xvfb-run wine python -m pip install --upgrade pip
RUN xvfb-run wine python -m pip install -r requirements.txt pyinstaller
RUN xvfb-run wine pyinstaller --onefile app.py
RUN mkdir -p /bundle/backend
RUN mv dist/app.exe /bundle/backend/app.exe

# Build the frontend and package with Tauri
WORKDIR /workspace/frontend
RUN bun install
RUN bun run build
RUN cargo tauri build --target x86_64-pc-windows-gnu
RUN mkdir -p /bundle/frontend
RUN cp -r src-tauri/target/x86_64-pc-windows-gnu/release/bundle/msi /bundle/frontend || true

CMD cp -r /bundle/* /output
