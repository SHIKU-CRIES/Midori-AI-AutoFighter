name: Build Linux

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        variant: [non-llm, llm-cpu, llm-cuda, llm-amd]
        
    steps:
      - uses: actions/checkout@v4
      
      - uses: astral-sh/setup-uv@v3
        with:
          python-version: '3.12'
          
      - name: Setup build environment
        working-directory: legacy
        run: |
          uv sync
          
      - name: Install variant dependencies
        working-directory: legacy
        run: |
          case "${{ matrix.variant }}" in
            "llm-cpu")
              uv sync --extra llm-cpu
              ;;
            "llm-cuda")
              uv sync --extra llm-cuda
              ;;
            "llm-amd")
              uv sync --extra llm-amd
              ;;
          esac
          
      - name: Install PyInstaller
        working-directory: legacy
        run: uv add --dev pyinstaller
        
      - name: Create assets directories
        working-directory: legacy
        run: |
          mkdir -p photos music
          
      - name: Build executable
        working-directory: legacy
        run: |
          DATA_ARGS=""
          if [ -d "photos" ]; then
            DATA_ARGS="$DATA_ARGS --add-data photos:photos"
          fi
          if [ -d "music" ]; then
            DATA_ARGS="$DATA_ARGS --add-data music:music"
          fi
          
          uv run pyinstaller --onefile $DATA_ARGS --clean --name midori-autofighter-${{ matrix.variant }}-linux main.py
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: midori-autofighter-${{ matrix.variant }}-linux
          path: legacy/dist/midori-autofighter-${{ matrix.variant }}-linux
          retention-days: 30