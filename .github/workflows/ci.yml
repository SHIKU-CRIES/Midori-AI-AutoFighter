name: CI

on:
  pull_request:

jobs:
  # Backend test jobs - matrix strategy to auto-discover test files
  backend-tests:
    name: Backend Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-file: ${{ fromJson(needs.discover-backend-tests.outputs.test-files) }}
    needs: discover-backend-tests
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
        with:
          python-version: '3.12'
      - name: Install backend dependencies
        working-directory: backend
        run: uv sync
      - name: Run test - ${{ matrix.test-file }}
        working-directory: backend
        timeout-minutes: 0
        run: uv run pytest tests/${{ matrix.test-file }}

  # Discover backend test files dynamically
  discover-backend-tests:
    name: Discover Backend Tests
    runs-on: ubuntu-latest
    outputs:
      test-files: ${{ steps.set-matrix.outputs.test-files }}
    steps:
      - uses: actions/checkout@v4
      - name: Discover test files
        id: set-matrix
        run: |
          cd backend/tests
          files=$(ls test_*.py | jq -R -s -c 'split("\n")[:-1]')
          echo "test-files=$files" >> $GITHUB_OUTPUT

  # Frontend test jobs - matrix strategy to auto-discover test files  
  frontend-tests:
    name: Frontend Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test-file: ${{ fromJson(needs.discover-frontend-tests.outputs.test-files) }}
    needs: discover-frontend-tests
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install frontend dependencies
        working-directory: frontend
        run: bun install
      - name: Run test - ${{ matrix.test-file }}
        working-directory: frontend
        timeout-minutes: 0
        run: bun test tests/${{ matrix.test-file }}

  # Discover frontend test files dynamically
  discover-frontend-tests:
    name: Discover Frontend Tests
    runs-on: ubuntu-latest
    outputs:
      test-files: ${{ steps.set-matrix.outputs.test-files }}
    steps:
      - uses: actions/checkout@v4
      - name: Discover test files
        id: set-matrix
        run: |
          cd frontend/tests
          files=$(ls *.test.js | jq -R -s -c 'split("\n")[:-1]')
          echo "test-files=$files" >> $GITHUB_OUTPUT

  # Linting jobs (kept separate as requested)
  backend-lint:
    name: Backend Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
        with:
          python-version: '3.12'
      - name: Run backend linting
        run: uvx ruff check backend

  frontend-lint:
    name: Frontend Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install frontend dependencies
        working-directory: frontend
        run: bun install
      - name: Run frontend linting
        working-directory: frontend
        run: bunx eslint .
